load_module modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http{
    
    underscores_in_headers on;
    
    js_path "/etc/nginx/app/";
    js_import auth.js;

    upstream product_service{
        server localhost;
        server app_product_service_1:8080 fail_timeout=10s;
        server app_product_service_2:8080 fail_timeout=10s;
    }

    server {
        listen 80;
        server_name localhost;
        resolver                127.0.0.11;

        location ^~ /protected/product {

            auth_request /authenticate;  
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_role $sent_http_x_auth_role;

            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;

            proxy_pass http://product_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Role $x_auth_role;

        }

        location ^~ /public/product {
            proxy_pass http://product_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ^~ /public/auth/ {
            proxy_pass http://auth_service:8080;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /authenticate {
            internal;
            js_content auth.authGuard;
            js_fetch_trusted_certificate /etc/ssl/certs/ISRG_Root_X1.pem;
        }

        location @auth_error_400 {
            internal;
            default_type application/json;
            return 500  '{ "message" : "Bad Request" }';
        }

        location @auth_error_401 {
            internal;
            default_type application/json;
            return 401 '{ "message" : "Unauthorized" }';
        }

        location @auth_error_500 {
            internal;
            default_type application/json;
            return 500  '{ "message" : "Internal server error" }';
        }
    }
}
